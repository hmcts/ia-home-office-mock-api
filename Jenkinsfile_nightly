#!groovy

properties([
  // H allow predefined but random minute see https://en.wikipedia.org/wiki/Cron#Non-standard_characters
  pipelineTriggers([cron('H 8 * * 1-5')]),
  parameters([
    string(name: 'SecurityRules',
      defaultValue: 'https://raw.githubusercontent.com/hmcts/security-test-rules/master/conf/security-rules.conf',
      description: 'The URL you want to run these tests against'),
  ])
])


@Library("Infrastructure")

def type = "java"
def product = "ia"
def component = "home-office-mock-api"

def secrets = [
    'ia-${env}': [
        secret('s2s-microservice', 'IA_S2S_MICROSERVICE'),
        secret('app-insights-connection-string', 'app-insights-connection-string')
    ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
    [$class     : 'AzureKeyVaultSecret',
     secretType : 'Secret',
     name       : secretName,
     version    : '',
     envVariable: envVar
    ]
}

withPipeline(type, product, component) {

    enableAksStagingDeployment()
    disableLegacyDeployment()
    loadVaultSecrets(secrets)

    afterSuccess('functionalTest:preview') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/site/serenity/**/*'
    }

    afterSuccess('functionalTest:aat') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/site/serenity/**/*'
    }

    enableFortifyScan()
    enableSlackNotifications('#ia-tech')

    after('fortify-scan') {
      steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/Fortify Scan/**/*'
    }
}
